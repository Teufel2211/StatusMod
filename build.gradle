plugins {
    id 'fabric-loom' version '1.1.8'
    id 'maven-publish'
}

group = 'de.teufel.statusmod'
archivesBaseName = 'statusmod'

base {
    archivesName = archivesBaseName
}

import java.util.regex.*

// ---- üîÑ Version-Auto-Inkrement ----
def versionFile = file("version.txt")

if (!versionFile.exists()) {
    versionFile.text = "1.0.0"
}

def versionText = versionFile.text.trim()
def matcher = Pattern.compile("(\\d+)\\.(\\d+)\\.(\\d+)").matcher(versionText)

if (matcher.matches()) {
    def major = matcher.group(1).toInteger()
    def minor = matcher.group(2).toInteger()
    def patch = matcher.group(3).toInteger() + 1
    project.version = "${major}.${minor}.${patch}"
    versionFile.text = project.version
} else {
    throw new GradleException("Ung√ºltige Version in version.txt: ${versionText}")
}

// ---- üß± Java-Konfiguration ----
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    withSourcesJar()
}

// ---- üì¶ Repositories ----
repositories {
    mavenCentral()
    maven { url = 'https://maven.fabricmc.net/' }
}

// ---- ‚öôÔ∏è Abh√§ngigkeiten ----
dependencies {
    minecraft "com.mojang:minecraft:1.21.1"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:0.16.0"
    modImplementation "net.fabricmc.fabric-api:fabric-api:0.107.0+1.21.1"
}

// ---- üèóÔ∏è Build-Konfiguration ----
processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
}

jar {
    from("LICENSE") {
        rename { "${it}_${archivesBaseName}" }
    }
}
